#Step 3 Segmentation Models

!pip install segmentation-models-pytorch
!pip install -U segmentation-models==0.2.1  
!pip install tensorflow==2.2.0
!pip install keras==2.3.1
import tensorflow as tf
import tensorflow.keras as keras
from segmentation_models import Unet

model = Unet()
model = Unet('resnet34', encoder_weights='imagenet')
model = Unet('resnet34', classes=3, activation='softmax')
model = Unet('resnet34', input_shape=(None, None, 6), encoder_weights=None)
from segmentation_models import Unet
from segmentation_models import get_preprocessing
from segmentation_models.losses import bce_jaccard_loss
from segmentation_models.metrics import iou_score

BACKBONE = 'resnet34'
preprocess_input = get_preprocessing(BACKBONE)

# load your data
x_train, y_train, x_val, y_val = load_data("input_data_path")

# preprocess input
x_train = preprocess_input(x_train)
x_val = preprocess_input(x_val)

# define model
model = Unet(BACKBONE, encoder_weights='imagenet')
model.compile('Adam', loss=bce_jaccard_loss, metrics=[iou_score])

# fit model
model.fit(
    x=x_train,
    y=y_train,
    batch_size=16,
    epochs=100,
    validation_data=(x_val, y_val),
)
